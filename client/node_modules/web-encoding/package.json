{
  "_from": "web-encoding@^1.0.6",
  "_id": "web-encoding@1.1.5",
  "_inBundle": false,
  "_integrity": "sha512-HYLeVCdJ0+lBYV2FvNZmv3HJ2Nt0QYXqZojk3d9FJOLkwnuhzM9tmamh8d7HPM8QqjKH8DeHkFTx+CFlWpZZDA==",
  "_location": "/web-encoding",
  "_phantomChildren": {
    "inherits": "2.0.4",
    "is-arguments": "1.0.4",
    "is-generator-function": "1.0.9",
    "is-typed-array": "1.1.5",
    "safe-buffer": "5.1.2",
    "which-typed-array": "1.1.4"
  },
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "web-encoding@^1.0.6",
    "name": "web-encoding",
    "escapedName": "web-encoding",
    "rawSpec": "^1.0.6",
    "saveSpec": null,
    "fetchSpec": "^1.0.6"
  },
  "_requiredBy": [
    "/ipfs-bitswap/multicodec/multibase",
    "/ipfs-bitswap/multicodec/uint8arrays",
    "/ipfs-core-types/multiaddr/multibase",
    "/ipfs-core-types/multiaddr/uint8arrays",
    "/ipfs-core-utils/multiaddr/multibase",
    "/ipfs-core-utils/multiaddr/uint8arrays",
    "/ipfs-core/ipld-dag-pb/multibase",
    "/ipfs-core/ipld-dag-pb/uint8arrays",
    "/ipfs-core/is-ipfs/multibase",
    "/ipfs-core/is-ipfs/uint8arrays",
    "/ipfs-core/multiaddr/multibase",
    "/ipfs-core/multiaddr/uint8arrays",
    "/ipfs-repo-migrations/ipld-dag-pb/uint8arrays",
    "/ipfs-repo-migrations/multibase",
    "/ipfs-repo-migrations/multicodec/uint8arrays",
    "/ipfs-repo/multibase",
    "/ipfs-unixfs-importer/uint8arrays",
    "/ipfs-unixfs-importer/uint8arrays/multibase",
    "/ipld-raw/multicodec/multibase",
    "/ipld-raw/multicodec/uint8arrays",
    "/ipld/ipld-dag-pb/multibase",
    "/ipld/ipld-dag-pb/uint8arrays",
    "/ipld/multicodec/multibase",
    "/ipld/multicodec/uint8arrays",
    "/ipns/multibase",
    "/libp2p-floodsub/multibase",
    "/libp2p-floodsub/uint8arrays",
    "/libp2p-gossipsub/uint8arrays",
    "/libp2p-gossipsub/uint8arrays/multibase",
    "/libp2p-interfaces/multiaddr/uint8arrays",
    "/libp2p-interfaces/multibase",
    "/libp2p-kad-dht/multiaddr/multibase",
    "/libp2p-kad-dht/multiaddr/uint8arrays",
    "/libp2p-mdns/multibase",
    "/libp2p-mdns/uint8arrays",
    "/libp2p-record/multibase",
    "/libp2p-record/uint8arrays",
    "/libp2p-webrtc-star/multibase",
    "/libp2p-webrtc-star/uint8arrays",
    "/libp2p/multiaddr/multibase",
    "/libp2p/multiaddr/uint8arrays",
    "/libp2p/multicodec/multibase",
    "/libp2p/multicodec/uint8arrays",
    "/multiaddr-to-uri/multibase",
    "/multiaddr-to-uri/uint8arrays",
    "/multistream-select/multibase",
    "/multistream-select/uint8arrays"
  ],
  "_resolved": "https://registry.npmjs.org/web-encoding/-/web-encoding-1.1.5.tgz",
  "_shasum": "fc810cf7667364a6335c939913f5051d3e0c4864",
  "_spec": "web-encoding@^1.0.6",
  "_where": "/home/ubuntu/Codigo_Javier/client/node_modules/libp2p-interfaces/node_modules/multibase",
  "author": {
    "name": "Irakli Gozalishvili",
    "email": "dev@gozala.io"
  },
  "browser": "./src/lib.js",
  "bundleDependencies": false,
  "dependencies": {
    "@zxing/text-encoding": "0.9.0",
    "util": "^0.12.3"
  },
  "deprecated": false,
  "description": "TextEncoder and TextDecoder APIs from Encoding Standard APIs in a universal package",
  "devDependencies": {
    "assert": "^2.0.0",
    "jest": "^26.6.3",
    "metro-react-native-babel-preset": "^0.64.0",
    "mocha": "8.3.2",
    "playwright-test": "2.1.0",
    "react-native": "^0.63.4"
  },
  "exports": {
    ".": {
      "import": "./src/lib.mjs",
      "require": "./src/lib.js"
    }
  },
  "homepage": "https://github.com/gozala/web-encoding",
  "jest": {
    "preset": "react-native",
    "transform": {
      "\\.js$": [
        "babel-jest",
        {
          "presets": [
            "module:metro-react-native-babel-preset"
          ]
        }
      ]
    }
  },
  "keywords": [
    "TextEncoder",
    "TextDecoder"
  ],
  "license": "MIT",
  "main": "./src/lib.js",
  "module": "./src/lib.mjs",
  "name": "web-encoding",
  "optionalDependencies": {
    "@zxing/text-encoding": "0.9.0"
  },
  "react-native": "./src/lib.react-native.js",
  "scripts": {
    "test": "npm run test:es && npm run test:cjs && npm run test:react-native && npm run test:types",
    "test:browser": "playwright-test test/test-*.js",
    "test:cjs": "npm run test:node && npm run test:browser",
    "test:es": "mocha test/test-lib.spec.mjs",
    "test:node": "mocha test/test-*.spec.js",
    "test:react-native": "jest test/test-lib.react-native.spec.js",
    "test:types": "npm run test:types:ts && npm run test:types:esm && npm run test:types:cjs",
    "test:types:cjs": "npm test --prefix test/cjs-use",
    "test:types:esm": "npm test --prefix test/esm-use",
    "test:types:ts": "npm test --prefix test/ts-use"
  },
  "types": "./src/lib.d.ts",
  "version": "1.1.5"
}
