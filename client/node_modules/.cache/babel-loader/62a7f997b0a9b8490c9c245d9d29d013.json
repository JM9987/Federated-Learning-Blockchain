{"ast":null,"code":"'use strict';\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\n\nconst take = async function* (source, limit) {\n  let items = 0;\n\n  if (limit < 1) {\n    return;\n  }\n\n  for await (const entry of source) {\n    yield entry;\n    items++;\n\n    if (items === limit) {\n      return;\n    }\n  }\n};\n\nmodule.exports = take;","map":null,"metadata":{},"sourceType":"script"}