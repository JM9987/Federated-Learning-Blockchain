{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('.').Keychain} config.keychain\n */\n\n\nmodule.exports = ({\n  keychain\n}) => {\n  /**\n   * Remove a key\n   *\n   * @example\n   * ```js\n   * const key = await ipfs.key.import('clone', pem, 'password')\n   *\n   * console.log(key)\n   * // { id: 'QmQRiays958UM7norGRQUG3tmrLq8pJdmJarwYSk2eLthQ',\n   * //   name: 'clone' }\n   * ```\n   * @param {string} name - The name of the key to import\n   * @param {string} pem - The PEM encoded key\n   * @param {string} password - The password that protects the PEM key\n   * @returns {Promise<import('.').Key>} - An object that describes the new key\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password);\n  };\n\n  return withTimeoutOption(importKey);\n};","map":null,"metadata":{},"sourceType":"script"}