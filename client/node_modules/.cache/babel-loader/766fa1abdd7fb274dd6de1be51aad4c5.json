{"ast":null,"code":"'use strict';\n\nconst pushable = require('it-pushable');\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n *\n * @template T\n * @param {...AsyncIterable<T>|Iterable<T>} sources\n * @returns {AsyncIterable<T>}\n */\n\n\nconst merge = async function* (...sources) {\n  // @ts-ignore\n  const output = pushable();\n  setTimeout(async () => {\n    try {\n      await Promise.all(sources.map(async source => {\n        for await (const item of source) {\n          output.push(item);\n        }\n      }));\n      output.end();\n    } catch (err) {\n      output.end(err);\n    }\n  }, 0);\n  yield* output;\n};\n\nmodule.exports = merge;","map":null,"metadata":{},"sourceType":"script"}