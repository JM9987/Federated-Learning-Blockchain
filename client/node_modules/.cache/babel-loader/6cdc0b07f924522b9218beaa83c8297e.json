{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TFG_FL/client/src/SearchInformes.js\";\nimport React, { Component } from \"react\";\nimport ReactFlexyTable from 'react-flexy-table';\nimport 'react-flexy-table/dist/index.css';\nimport raw from './resultados.txt';\n\nclass SearchInformes extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      let response = await this.props.functions.getAllInformes();\n      this.setState({\n        response: response\n      });\n    };\n\n    this.state = {\n      response: null,\n      clicked: false\n    };\n  }\n\n  render() {\n    var text;\n    fetch(raw).then(r => r.text()).then(text => {\n      console.log('text decoded:', text);\n    });\n    let table;\n\n    if (this.state.response != null) {\n      console.log(this.state.response);\n      let datos = Array(this.state.response.length);\n      var i;\n\n      for (i = 0; i < datos.length; ++i) {\n        datos[i] = {\n          title: this.state.response[i].informe.title,\n          entidad: this.state.response[i].entidad,\n          hashValue: this.state.response[i].informe.hashValue,\n          CID: this.state.response[i].informe.CID\n        };\n      }\n\n      let columns = [{\n        header: 'Título',\n        key: 'title',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, data.title)\n      }, {\n        header: 'Usuario',\n        key: 'entidad',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, data.entidad)\n      }, {\n        header: 'Hash',\n        // can also use with nested objects\n        key: 'hashValue',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, data.hashValue)\n      }, {\n        header: 'Resultados',\n        // can also use with nested objects\n        key: 'Res',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, text)\n      }];\n      table = React.createElement(ReactFlexyTable, {\n        data: datos,\n        columns: columns,\n        filterable: true,\n        sortable: true,\n        nonSortCols: ['hashValue', 'Res'],\n        pageSizeOptions: [20, 50, 100],\n        pageSize: 20,\n        className: \"my_table rft-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }); // table = <table style= {{width:'70%'}} >\n      //     <tr>\n      //         <th>Título</th>\n      //         <th>Owner</th>\n      //         <th>Hash</th>\n      //         <th>URL</th>\n      //     </tr>\n      //     {this.state.response.map(item => {\n      //         let url = \"https://ipfs.io/ipfs/\" + item.CID;\n      //         return <tr>\n      //             <td>{item.title}</td>\n      //             <td>{item.owner}</td>\n      //             <td>{item.hashValue}</td>\n      //             <td><a href={url}>{url}</a></td>\n      //         </tr>\n      //     })}\n      //     </table>;\n    } else if (this.state.clicked) {\n      table = \"No hay informes\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"maincomp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, table));\n  }\n\n}\n\nexport default SearchInformes;","map":{"version":3,"sources":["/home/ubuntu/TFG_FL/client/src/SearchInformes.js"],"names":["React","Component","ReactFlexyTable","raw","SearchInformes","componentDidMount","response","props","functions","getAllInformes","setState","state","clicked","render","text","fetch","then","r","console","log","table","datos","Array","length","i","title","informe","entidad","hashValue","CID","columns","header","key","td","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactFlexyTable from 'react-flexy-table';\r\nimport 'react-flexy-table/dist/index.css';\r\nimport raw from './resultados.txt';\r\n\r\nclass SearchInformes extends Component {\r\n\r\n\r\n    componentDidMount = async () => {\r\n        let response = await this.props.functions.getAllInformes();\r\n        this.setState({response: response});\r\n    }\r\n\r\n    state = {\r\n        response:null,\r\n        clicked: false\r\n    }\r\n\r\n    render() {\r\n    \r\n         var text;\r\n    \tfetch(raw)\r\n  .then(r => r.text())\r\n  .then(text => {\r\n    console.log('text decoded:', text);\r\n  });\r\n  \r\n        let table;\r\n\r\n        if(this.state.response != null){\r\n            console.log(this.state.response)\r\n            let datos = Array(this.state.response.length)\r\n            var i;\r\n            for(i=0; i<datos.length; ++i){\r\n                datos[i] = {\r\n                    title: this.state.response[i].informe.title,\r\n                    entidad: this.state.response[i].entidad,\r\n                    hashValue: this.state.response[i].informe.hashValue,\r\n                    CID: this.state.response[i].informe.CID\r\n                }\r\n            }\r\n            let columns = [\r\n                {\r\n                  header: 'Título',\r\n                  key:'title',\r\n                  td: (data) => <div>{data.title}</div>\r\n                },\r\n                {\r\n                  header: 'Usuario',\r\n                  key: 'entidad',\r\n                  td: (data) => <div>{data.entidad}</div>\r\n                },\r\n                {\r\n                  header: 'Hash',\r\n                  // can also use with nested objects\r\n                  key: 'hashValue',\r\n                  td: (data) => <div>{data.hashValue}</div>\r\n                },\r\n                {\r\n                    header: 'Resultados',\r\n                    // can also use with nested objects\r\n                    key: 'Res',\r\n                    td: (data) => <div>{text}</div>\r\n                  }\r\n              ]\r\n            \r\n              table = <ReactFlexyTable data={datos} columns={columns} filterable sortable nonSortCols={['hashValue', 'Res']} pageSizeOptions={[20, 50, 100]} pageSize={20}  className=\"my_table rft-table\"/>\r\n\r\n\r\n\r\n\r\n\r\n            // table = <table style= {{width:'70%'}} >\r\n            //     <tr>\r\n            //         <th>Título</th>\r\n            //         <th>Owner</th>\r\n            //         <th>Hash</th>\r\n            //         <th>URL</th>\r\n            //     </tr>\r\n            //     {this.state.response.map(item => {\r\n            //         let url = \"https://ipfs.io/ipfs/\" + item.CID;\r\n            //         return <tr>\r\n            //             <td>{item.title}</td>\r\n            //             <td>{item.owner}</td>\r\n            //             <td>{item.hashValue}</td>\r\n            //             <td><a href={url}>{url}</a></td>\r\n            //         </tr>\r\n            //     })}\r\n            //     </table>;\r\n        } else if (this.state.clicked) {\r\n            table = \"No hay informes\";\r\n        }\r\n\r\n        \r\n\r\n        return(\r\n        <div className=\"maincomp\">\r\n            {/* <br></br>\r\n            <button onClick={() => this.getAllListener()}>Get all informes</button>\r\n            <br></br> <br></br> */}\r\n            <div className=\"searchTable\">{table}</div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInformes;\r\n"]},"metadata":{},"sourceType":"module"}