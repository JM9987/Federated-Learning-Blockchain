{"ast":null,"code":"'use strict';\n\nconst last = require('it-last');\n/**\n * @typedef {Object} Context\n * @property {ReturnType<import('./add-all')>} addAll\n *\n * @param {Context} context\n */\n\n\nmodule.exports = ({\n  addAll\n}) => {\n  /**\n   * Import a file or data into IPFS.\n   *\n   * @param {import('ipfs-core-types/src/files').ToEntry} entry\n   * @param {import('ipfs-core-types/src/root').AddAllOptions} [options]\n   * @returns {Promise<import('ipfs-core-types/src/files').UnixFSEntry>}\n   */\n  async function add(entry, options) {\n    /** @type {import('ipfs-core-types/src/files').ImportSource} */\n    const source = entry;\n    const result = await last(addAll(source, options)); // Note this should never happen as `addAll` should yield at least one item\n    // but to satisfy type checker we perfom this check and for good measure\n    // throw an error in case it does happen.\n\n    if (result == null) {\n      throw Error('Failed to add a file, if you see this please report a bug');\n    }\n\n    return result;\n  }\n\n  return add;\n};","map":null,"metadata":{},"sourceType":"script"}