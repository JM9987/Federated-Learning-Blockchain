{"ast":null,"code":"'use strict';\n\nconst _require = require('interface-datastore'),\n      Key = _require.Key;\n\nconst CID = require('cids');\n\nconst multibase = require('multibase');\n\nconst errcode = require('err-code');\n\nconst uint8ArrayToString = require('uint8arrays/to-string');\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} cid\n * @returns {Key}\n */\n\n\nexports.cidToKey = cid => {\n  if (!CID.isCID(cid)) {\n    throw errcode(new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n\n  return new Key('/' + uint8ArrayToString(multibase.encode('base32', cid.multihash)).slice(1).toUpperCase(), false);\n};\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n * @returns {CID}\n */\n\n\nexports.keyToCid = key => {\n  // Block key is of the form /<base32 encoded string>\n  return new CID(1, 'raw', multibase.decode('b' + key.toString().slice(1).toLowerCase()));\n};","map":null,"metadata":{},"sourceType":"script"}