{"ast":null,"code":"'use strict';\n\nconst errcode = require('err-code');\n\nconst uint8ArrayToString = require('uint8arrays/to-string');\n\nconst uint8ArrayFromString = require('uint8arrays/from-string');\n\nconst namespace = '/record/';\n\nmodule.exports.encodeBase32 = buf => {\n  return uint8ArrayToString(buf, 'base32');\n}; // converts a binary record key to a pubsub topic key.\n\n\nmodule.exports.keyToTopic = key => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key);\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url');\n  return \"\".concat(namespace).concat(b64url);\n}; // converts a pubsub topic key to a binary record key.\n\n\nmodule.exports.topicToKey = topic => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE');\n  }\n\n  const key = topic.substring(namespace.length);\n  return uint8ArrayFromString(key, 'base64url');\n};","map":null,"metadata":{},"sourceType":"script"}