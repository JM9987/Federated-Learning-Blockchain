{"ast":null,"code":"'use strict';\n\nconst stat = require('./stat');\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n\nconst mergeOptions = require('merge-options').bind({\n  ignoreUndefined: true\n});\n\nconst defaultOptions = {\n  timeout: undefined,\n  signal: undefined\n};\n\nmodule.exports = context => {\n  /**\n   * Flush a given path's data to disk\n   *\n   * @param {string} path\n   * @param {AbortOptions} [options]\n   * @returns {Promise<CID>} The CID of the path that has been flushed\n   */\n  async function mfsFlush(path, options = {}) {\n    options = mergeOptions(defaultOptions, options);\n\n    const _ref = await stat(context)(path, options),\n          cid = _ref.cid;\n\n    return cid;\n  }\n\n  return withTimeoutOption(mfsFlush);\n};\n/**\n * @typedef {import('cids')} CID\n * @typedef {import('../../utils').AbortOptions} AbortOptions\n */","map":null,"metadata":{},"sourceType":"script"}