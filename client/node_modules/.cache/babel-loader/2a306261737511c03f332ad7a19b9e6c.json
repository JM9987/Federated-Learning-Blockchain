{"ast":null,"code":"'use strict';\n\nconst log = require('debug')('ipfs:repo:migrator:repo:init');\n\nconst _require = require('../utils'),\n      CONFIG_KEY = _require.CONFIG_KEY,\n      VERSION_KEY = _require.VERSION_KEY,\n      createStore = _require.createStore;\n\nconst _require2 = require('../errors'),\n      MissingRepoOptionsError = _require2.MissingRepoOptionsError;\n\nexports.isRepoInitialized = async function isRepoInitialized(path, repoOptions) {\n  if (!repoOptions) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n  }\n\n  let root;\n\n  try {\n    root = createStore(path, 'root', repoOptions);\n    await root.open();\n    const versionCheck = await root.has(VERSION_KEY);\n    const configCheck = await root.has(CONFIG_KEY);\n\n    if (!versionCheck || !configCheck) {\n      log(\"Version entry present: \".concat(versionCheck));\n      log(\"Config entry present: \".concat(configCheck));\n      return false;\n    }\n\n    return true;\n  } catch (e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message);\n    return false;\n  } finally {\n    if (root !== undefined) {\n      await root.close();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}