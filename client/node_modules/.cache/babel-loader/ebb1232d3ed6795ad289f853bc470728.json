{"ast":null,"code":"'use strict';\n\nvar Buffer = require('buffer').Buffer;\n\nvar ta2str = function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8');\n    return decoder.decode.bind(decoder);\n  } else {\n    return function ta2str(ta) {\n      return ta2buf(ta).toString();\n    };\n  }\n}();\n\nvar ab2str = function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8');\n    return decoder.decode.bind(decoder);\n  } else {\n    return function ab2str(ab) {\n      return Buffer.from(ab).toString();\n    };\n  }\n}();\n\nfunction ta2buf(ta) {\n  var buf = Buffer.from(ta.buffer);\n\n  if (ta.byteLength === ta.buffer.byteLength) {\n    return buf;\n  } else {\n    return buf.slice(ta.byteOffset, ta.byteOffset + ta.byteLength);\n  }\n}\n\nmodule.exports = function (data, asBuffer) {\n  if (data instanceof Uint8Array) {\n    return asBuffer ? ta2buf(data) : ta2str(data);\n  } else if (data instanceof ArrayBuffer) {\n    return asBuffer ? Buffer.from(data) : ab2str(data);\n  } else {\n    return asBuffer ? Buffer.from(String(data)) : String(data);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}