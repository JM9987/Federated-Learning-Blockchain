{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TFG_FL/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport FilesStorageContract from \"./contracts/FilesStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport asmCrypto from \"asmcrypto-lite\";\nimport IPFS from \"ipfs-core\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport ContractFunctions from \"./ContractFunctions\";\nimport SubirModelo from \"./SubirModelo\";\nimport RegistroUser from \"./RegistroUser\";\nimport EntrenarModelo from \"./EntrenarModelo\";\nimport ListaModelos from \"./ListaModelos\";\nimport UsuarioAdmin from \"./UsuarioAdmin\";\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport './sidenav.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId(); //console.log(networkId);\n\n        const deployedNetwork = FilesStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(FilesStorageContract.abi, deployedNetwork && deployedNetwork.address);\n        var contractFunctions = new ContractFunctions(web3, accounts, instance);\n        var isOwner = await contractFunctions.esPropietario();\n        var isApprovedEntity = await contractFunctions.userValidado();\n        var entityName = await contractFunctions.getNombreUser(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3: new ContractFunctions(web3, accounts, instance),\n          isOwner: isOwner,\n          isApprovedEntity: isApprovedEntity,\n          entityName: entityName\n        }\n        /*, this.runExample*/\n        );\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.subirModelo = async (hash, title) => {\n      const _this$state = this.state,\n            accounts = _this$state.accounts,\n            contract = _this$state.contract;\n      await contract.methods.registrarModelo(hash, title).send({\n        from: accounts[0]\n      });\n    };\n\n    this.entrenarModelo = async (hash, title) => {\n      const _this$state2 = this.state,\n            accounts = _this$state2.accounts,\n            contract = _this$state2.contract;\n      await contract.methods.registrarModelo(hash, title).send({\n        from: accounts[0]\n      });\n    };\n\n    this.readFile = async file => {\n      console.log(file);\n      let data = await file.arrayBuffer();\n      let uint8data = new Uint8Array(data);\n      let hash = asmCrypto.SHA256.hex(data);\n      const ipfs = await IPFS.create();\n\n      const _ref = await ipfs.add(uint8data),\n            cid = _ref.cid;\n\n      console.info(cid);\n    };\n\n    this.SubidaModelo = async (file, title) => {\n      const _this$state3 = this.state,\n            accounts = _this$state3.accounts,\n            contract = _this$state3.contract;\n      let data = await file.arrayBuffer();\n      let hash = asmCrypto.SHA256.hex(data);\n      await contract.methods.subirModelo(hash, title).send({\n        from: accounts[0]\n      });\n    };\n\n    this.EntrenoModelo = async (file, title) => {\n      const _this$state4 = this.state,\n            accounts = _this$state4.accounts,\n            contract = _this$state4.contract;\n      let data = await file.arrayBuffer();\n      let hash = asmCrypto.SHA256.hex(data);\n      await contract.methods.entrenarModelo(hash, title).send({\n        from: accounts[0]\n      });\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    } else {\n      if (this.state.isApprovedEntity) {\n        registerRoute = React.createElement(Route, {\n          path: \"/register\",\n          component: () => React.createElement(SubirModelo, {\n            functions: this.state.web3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        });\n        rootRoute = React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: () => React.createElement(SubirModelo, {\n            functions: this.state.web3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n        entityName = \"Conectado como: \" + this.state.entityName;\n      } else {\n        registerRoute = React.createElement(Route, {\n          path: \"/register\",\n          component: () => React.createElement(RegistroUser, {\n            functions: this.state.web3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n        rootRoute = React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: () => React.createElement(RegistroUser, {\n            functions: this.state.web3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.isOwner) {\n        UsuarioAdminLink = React.createElement(NavItem, {\n          eventKey: \"UsuarioAdmin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(NavIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"ADMIN\")), React.createElement(NavText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"UsuarioAdmin\"));\n        UsuarioAdminRoute = React.createElement(Route, {\n          path: \"/UsuarioAdmin\",\n          render: () => React.createElement(UsuarioAdmin, {\n            functions: this.state.web3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topnav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"titletext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Entrenamiento Federated Learning\"), React.createElement(\"div\", {\n      className: \"loggedInAs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, entityName)), React.createElement(Route, {\n      render: ({\n        location,\n        history\n      }) => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(SideNav, {\n        onSelect: selected => {\n          const to = '/' + selected;\n\n          if (location.pathname !== to) {\n            history.push(to);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: \"45px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(SideNav.Nav, {\n        defaultSelected: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        eventKey: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"REGISTRO\")), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Home\")), React.createElement(NavItem, {\n        eventKey: \"train\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"ENTRENAR\")), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Devices\")), React.createElement(NavItem, {\n        eventKey: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(NavIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"LISTA\")), React.createElement(NavText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"List\")), UsuarioAdminLink)), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, rootRoute, registerRoute, React.createElement(Route, {\n        path: \"/train\",\n        render: () => React.createElement(EntrenarModelo, {\n          functions: this.state.web3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        render: () => React.createElement(ListaModelos, {\n          functions: this.state.web3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), UsuarioAdminRoute)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })) // <Router>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/TFG_FL/client/src/App.js"],"names":["React","Component","FilesStorageContract","getWeb3","asmCrypto","IPFS","BrowserRouter","Router","Link","Route","ContractFunctions","SubirModelo","RegistroUser","EntrenarModelo","ListaModelos","UsuarioAdmin","SideNav","Toggle","Nav","NavItem","NavIcon","NavText","App","state","web3","componentDidMount","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","contractFunctions","isOwner","esPropietario","isApprovedEntity","userValidado","entityName","getNombreUser","setState","error","alert","console","subirModelo","hash","title","contract","methods","registrarModelo","send","from","entrenarModelo","readFile","file","log","data","arrayBuffer","uint8data","Uint8Array","SHA256","hex","ipfs","create","add","cid","info","SubidaModelo","EntrenoModelo","render","registerRoute","rootRoute","UsuarioAdminLink","UsuarioAdminRoute","location","history","selected","to","pathname","push","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FilesStorageContract from \"./contracts/FilesStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport asmCrypto from \"asmcrypto-lite\";\nimport IPFS from \"ipfs-core\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport ContractFunctions from \"./ContractFunctions\";\nimport SubirModelo from \"./SubirModelo\";\nimport RegistroUser from \"./RegistroUser\";\nimport EntrenarModelo from \"./EntrenarModelo\";\nimport ListaModelos from \"./ListaModelos\"\nimport UsuarioAdmin from \"./UsuarioAdmin\"\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport './sidenav.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { web3: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      //console.log(networkId);\n      const deployedNetwork = FilesStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        FilesStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      var contractFunctions = new ContractFunctions(web3, accounts, instance);\n\n      var isOwner = await contractFunctions.esPropietario();\n      var isApprovedEntity = await contractFunctions.userValidado();\n      var entityName = await contractFunctions.getNombreUser();\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3: new ContractFunctions(web3, accounts, instance), isOwner: isOwner, isApprovedEntity: isApprovedEntity, entityName: entityName }/*, this.runExample*/);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  subirModelo = async (hash, title) => {\n    const { accounts, contract } = this.state;\n\n    await contract.methods.registrarModelo(hash, title).send({ from: accounts[0] });\n  }\n\n  entrenarModelo = async (hash, title) => {\n    const { accounts, contract } = this.state;\n\n    await contract.methods.registrarModelo(hash, title).send({ from: accounts[0] });\n  }\n\n  readFile = async (file) => {\n    console.log(file);\n    let data = await file.arrayBuffer();\n    let uint8data = new Uint8Array(data);\n    let hash = asmCrypto.SHA256.hex(data);\n\n    const ipfs = await IPFS.create()\n    const { cid } = await ipfs.add(uint8data)\n    console.info(cid)\n  }\n\n  SubidaModelo = async (file, title) => {\n    const { accounts, contract } = this.state;\n\n    let data = await file.arrayBuffer();\n    let hash = asmCrypto.SHA256.hex(data);\n\n    await contract.methods.subirModelo(hash, title).send({ from: accounts[0] });\n\n  }\n  \n  EntrenoModelo = async (file, title) => {\n    const { accounts, contract } = this.state;\n\n    let data = await file.arrayBuffer();\n    let hash = asmCrypto.SHA256.hex(data);\n\n    await contract.methods.entrenarModelo(hash, title).send({ from: accounts[0] });\n\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    else {\n      if (this.state.isApprovedEntity) {\n        registerRoute = <Route path=\"/register\" component={() => (\n          <SubirModelo functions={this.state.web3} />\n        )} />\n        rootRoute = <Route exact={true} path=\"/\" component={() => (\n          <SubirModelo functions={this.state.web3} />\n        )} />\n        entityName = \"Conectado como: \" + this.state.entityName;\n      }\n      else{\n        registerRoute = <Route path=\"/register\" component={() => (\n          <RegistroUser functions={this.state.web3} />\n        )} />\n        rootRoute = <Route exact={true} path=\"/\" component={() => (\n          <RegistroUser functions={this.state.web3} />\n        )} />\n      } \n      if (this.state.isOwner) {\n        UsuarioAdminLink = <NavItem eventKey=\"UsuarioAdmin\">\n          <NavIcon>\n            {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n            {/* <img src={listIcon} style={{ height: '40px', marginTop: \"5px\" }} /> */}\n            <div>ADMIN</div>\n          </NavIcon>\n          <NavText>\n            UsuarioAdmin\n            </NavText>\n        </NavItem>\n        UsuarioAdminRoute = <Route path=\"/UsuarioAdmin\" render={() => (\n          <UsuarioAdmin functions={this.state.web3} />\n        )} />\n      }\n    }\n\n\n    return (\n      <Router>\n        <div className=\"topnav\">\n          <div className=\"titletext\"> Entrenamiento Federated Learning</div>\n          <div className=\"loggedInAs\">{entityName}</div>\n        </div>\n        <Route render={({ location, history }) => (\n          <React.Fragment>\n            <SideNav\n              onSelect={(selected) => {\n                const to = '/' + selected;\n                if (location.pathname !== to) {\n                  history.push(to);\n                }\n              }}\n            >\n              <div style={{ height: \"45px\" }}></div>\n              <SideNav.Nav defaultSelected=\"register\">\n                <NavItem eventKey=\"register\">\n                  <NavIcon>\n                    {/* <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} /> */}\n                  <div>REGISTRO</div>  \n                  </NavIcon>\n                  <NavText>\n                    Home\n                        </NavText>\n                </NavItem>\n                <NavItem eventKey=\"train\">\n                \n                  <NavIcon>\n                    {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n                    <div>ENTRENAR</div>\n                  </NavIcon>\n                  <NavText>\n                    Devices\n                        </NavText>\n                </NavItem>\n                <NavItem eventKey=\"search\">\n                  <NavIcon>\n                    {/* <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} /> */}\n                    <div>LISTA</div>\n                  </NavIcon>\n                  <NavText>\n                    List\n                        </NavText>\n                </NavItem>\n                {UsuarioAdminLink}\n              </SideNav.Nav>\n            </SideNav>\n            <main>\n              {rootRoute}\n              {registerRoute}\n              <Route path=\"/train\" render={() => (\n                <EntrenarModelo functions={this.state.web3} />\n              )} />\n              <Route path=\"/search\" render={() => (\n                <ListaModelos functions={this.state.web3} />\n              )} />\n              {UsuarioAdminRoute}\n            </main>\n          </React.Fragment>\n        )}\n        />\n      </Router>\n\n\n\n\n\n\n\n      // <Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}