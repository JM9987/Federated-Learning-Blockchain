{"ast":null,"code":"'use strict';\n\nconst createAdd = require('./add');\n\nconst createAddAll = require('./add-all');\n\nconst createLs = require('./ls');\n\nconst createRm = require('./rm');\n\nconst createRmAll = require('./rm-all');\n\nclass PinAPI {\n  /**\n   * @param {Object} config\n   * @param {GCLock} config.gcLock\n   * @param {DagReader} config.dagReader\n   * @param {PinManager} config.pinManager\n   */\n  constructor({\n    gcLock,\n    dagReader,\n    pinManager\n  }) {\n    const addAll = createAddAll({\n      gcLock,\n      dagReader,\n      pinManager\n    });\n    this.addAll = addAll;\n    this.add = createAdd({\n      addAll\n    });\n    const rmAll = createRmAll({\n      gcLock,\n      dagReader,\n      pinManager\n    });\n    this.rmAll = rmAll;\n    this.rm = createRm({\n      rmAll\n    });\n    this.ls = createLs({\n      dagReader,\n      pinManager\n    });\n  }\n\n}\n\nmodule.exports = PinAPI;\n/**\n * @typedef {import('..').Repo} Repo\n * @typedef {import('..').GCLock} GCLock\n * @typedef {import('..').DagReader} DagReader\n * @typedef {import('..').PinManager} PinManager\n * @typedef {import('..').AbortOptions} AbortOptions\n * @typedef {import('..').CID} CID\n */","map":null,"metadata":{},"sourceType":"script"}