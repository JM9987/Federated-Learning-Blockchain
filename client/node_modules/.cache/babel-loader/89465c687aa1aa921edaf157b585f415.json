{"ast":null,"code":"'use strict';\n\nconst select = require('./select');\n\nconst handle = require('./handle');\n\nconst ls = require('./ls');\n\nconst _require = require('./constants'),\n      PROTOCOL_ID = _require.PROTOCOL_ID;\n\nexports.PROTOCOL_ID = PROTOCOL_ID;\n\nclass MultistreamSelect {\n  constructor(stream) {\n    this._stream = stream;\n    this._shaken = false;\n  } // Perform the multistream-select handshake\n\n\n  async _handshake() {\n    if (this._shaken) return;\n\n    const _ref = await select(this._stream, PROTOCOL_ID),\n          stream = _ref.stream;\n\n    this._stream = stream;\n    this._shaken = true;\n  }\n\n}\n\nclass Dialer extends MultistreamSelect {\n  select(protocols) {\n    return select(this._stream, protocols, this._shaken ? null : PROTOCOL_ID);\n  }\n\n  async ls() {\n    await this._handshake();\n\n    const _ref2 = await ls(this._stream),\n          stream = _ref2.stream,\n          protocols = _ref2.protocols;\n\n    this._stream = stream;\n    return protocols;\n  }\n\n}\n\nexports.Dialer = Dialer;\n\nclass Listener extends MultistreamSelect {\n  handle(protocols) {\n    return handle(this._stream, protocols);\n  }\n\n}\n\nexports.Listener = Listener;","map":null,"metadata":{},"sourceType":"script"}