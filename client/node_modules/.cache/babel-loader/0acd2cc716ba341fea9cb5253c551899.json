{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TFG_FL/client/src/AdminPanel.js\";\nimport React, { Component } from \"react\";\nimport ReactFlexyTable from 'react-flexy-table';\nimport 'react-flexy-table/dist/index.css';\n\nclass AdminPanel extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      let response = await this.props.functions.getAllEntities();\n      this.setState({\n        response: response\n      });\n    };\n\n    this.approveEntity = async address => {\n      var response = await this.props.functions.approveEntity(address);\n      response = await this.props.functions.getAllEntities();\n      this.setState({\n        response: response\n      });\n    };\n\n    this.state = {\n      response: null,\n      clicked: false\n    };\n  }\n\n  render() {\n    let table;\n    var dataFromContract = this.state.response;\n\n    if (this.state.response != null) {\n      var j;\n\n      for (j = 0; j < dataFromContract.length; j++) {\n        var i = j;\n\n        if (!dataFromContract[i].approved) {\n          dataFromContract[i] = {\n            name: dataFromContract[i].name,\n            entityAddress: dataFromContract[i].entityAddress,\n            approved: \"X\",\n            // button: <button className=\"buttonForm\" onClick={() => this.approveEntity(this.state.response[i].entityAddress)}>Aprobar</button>\n            button: React.createElement(\"button\", {\n              value: i,\n              className: \"buttonTable\",\n              onClick: this.approveEntity.bind(this, dataFromContract[i].entityAddress),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, \"Aprobar\")\n          };\n        } else {\n          dataFromContract[i] = {\n            name: dataFromContract[i].name,\n            entityAddress: dataFromContract[i].entityAddress,\n            approved: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            }, \"\\u2713\"),\n            button: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            })\n          };\n        }\n      }\n\n      console.log(dataFromContract);\n      console.log(this.state.response);\n      let columns = [{\n        header: 'Usuario',\n        key: 'name',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, data.name)\n      }, {\n        header: 'Dirección',\n        key: 'entityAddress',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, data.entityAddress)\n      }, {\n        header: 'Confirmado',\n        // can also use with nested objects\n        key: 'approved',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, data.approved)\n      }, {\n        header: 'Acción',\n        // can also use with nested objects\n        key: 'button',\n        td: data => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, data.button)\n      }];\n      table = React.createElement(ReactFlexyTable, {\n        data: dataFromContract,\n        columns: columns,\n        filterable: true,\n        nonFilterCols: [\"approved\", \"button\"],\n        sortable: true,\n        pageSizeOptions: [20, 50, 100],\n        pageSize: 20,\n        className: \"my_table rft-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"maincomp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, table));\n  }\n\n}\n\nexport default AdminPanel;","map":{"version":3,"sources":["/home/ubuntu/TFG_FL/client/src/AdminPanel.js"],"names":["React","Component","ReactFlexyTable","AdminPanel","componentDidMount","response","props","functions","getAllEntities","setState","approveEntity","address","state","clicked","render","table","dataFromContract","j","length","i","approved","name","entityAddress","button","bind","console","log","columns","header","key","td","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactFlexyTable from 'react-flexy-table';\r\nimport 'react-flexy-table/dist/index.css';\r\n\r\nclass AdminPanel extends Component {\r\n    componentDidMount = async () => {\r\n        let response = await this.props.functions.getAllEntities();\r\n        this.setState({ response: response });\r\n    }\r\n\r\n    approveEntity = async (address) => {\r\n        var response = await this.props.functions.approveEntity(address);\r\n        response = await this.props.functions.getAllEntities();\r\n        this.setState({response: response});\r\n    }\r\n\r\n    state = {\r\n        response: null,\r\n        clicked: false\r\n    }\r\n\r\n    render() {\r\n        let table;\r\n\r\n      var dataFromContract = this.state.response;\r\n\r\n\r\n\r\n        if (this.state.response != null) {\r\n            var j;\r\n            for (j = 0; j < dataFromContract.length; j++) {\r\n                var i=j;\r\n                if (!dataFromContract[i].approved) {\r\n                    dataFromContract[i] = {\r\n                        name: dataFromContract[i].name, entityAddress: dataFromContract[i].entityAddress, approved: \"X\",\r\n                        // button: <button className=\"buttonForm\" onClick={() => this.approveEntity(this.state.response[i].entityAddress)}>Aprobar</button>\r\n                        button: <button value={i} className=\"buttonTable\" onClick={this.approveEntity.bind(this, dataFromContract[i].entityAddress)}>Aprobar</button>\r\n                    }\r\n                }\r\n                else {\r\n                    dataFromContract[i] = {\r\n                        name: dataFromContract[i].name, entityAddress: dataFromContract[i].entityAddress, approved: <span>&#10003;</span>,\r\n                        button: <span></span>\r\n                    }\r\n                }\r\n            }\r\n            console.log(dataFromContract)\r\n            console.log(this.state.response)\r\n            let columns = [\r\n                {\r\n                    header: 'Usuario',\r\n                    key: 'name',\r\n                    td: (data) => <div>{data.name}</div>\r\n                },\r\n                {\r\n                    header: 'Dirección',\r\n                    key: 'entityAddress',\r\n                    td: (data) => <div>{data.entityAddress}</div>\r\n                },\r\n                {\r\n                    header: 'Confirmado',\r\n                    // can also use with nested objects\r\n                    key: 'approved',\r\n                    td: (data) => <div>{data.approved}</div>\r\n                },\r\n                {\r\n                    header: 'Acción',\r\n                    // can also use with nested objects\r\n                    key: 'button',\r\n                    td: (data) => <div>{data.button}</div>\r\n                }\r\n            ]\r\n\r\n            table = <ReactFlexyTable data={dataFromContract} columns={columns} filterable nonFilterCols={[\"approved\",\"button\"]} sortable pageSizeOptions={[20, 50, 100]} pageSize={20} className=\"my_table rft-table\" />\r\n\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"maincomp\">\r\n                <div className=\"searchTable\">{table}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminPanel;\r\n"]},"metadata":{},"sourceType":"module"}