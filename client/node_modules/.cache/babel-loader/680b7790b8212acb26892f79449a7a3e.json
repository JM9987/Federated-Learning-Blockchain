{"ast":null,"code":"'use strict';\n\nconst createAddAPI = require('./add');\n\nconst createAddAllAPI = require('./add-all');\n\nconst createCatAPI = require('./cat');\n\nconst createGetAPI = require('./get');\n\nconst createLsAPI = require('./ls');\n/**\n * @typedef {AddAllContext & CatContext & GetContext & ListContext } Context\n * @typedef {import('./add-all').Context} AddAllContext\n * @typedef {import('./cat').Context} CatContext\n * @typedef {import('./get').Context} GetContext\n * @typedef {import('./ls').Context} ListContext\n * @typedef {import('ipfs-core-types/src').RootAPI} RootAPI\n * @implements {RootAPI}\n */\n\n\nclass Root {\n  /**\n   * @param {Context} context\n   */\n  constructor({\n    preload,\n    gcLock,\n    pin,\n    block,\n    ipld,\n    options\n  }) {\n    const addAll = createAddAllAPI({\n      preload,\n      gcLock,\n      block,\n      pin,\n      options\n    });\n    this.addAll = addAll;\n    this.add = createAddAPI({\n      addAll\n    });\n    this.cat = createCatAPI({\n      ipld,\n      preload\n    });\n    this.get = createGetAPI({\n      ipld,\n      preload\n    });\n    this.ls = createLsAPI({\n      ipld,\n      preload\n    });\n  }\n\n}\n\nmodule.exports = Root;","map":null,"metadata":{},"sourceType":"script"}