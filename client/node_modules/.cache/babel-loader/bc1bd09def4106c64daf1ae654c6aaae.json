{"ast":null,"code":"'use strict';\n\nconst isPrivate = require('./multiaddr/is-private');\n/**\n * Compare function for array.sort().\n * This sort aims to move the private adresses to the end of the array.\n * In case of equality, a certified address will come first.\n *\n * @param {Address} a\n * @param {Address} b\n * @returns {number}\n */\n\n\nfunction addressesPublicFirstCompareFunction(a, b) {\n  const isAPrivate = isPrivate(a.multiaddr);\n  const isBPrivate = isPrivate(b.multiaddr);\n\n  if (isAPrivate && !isBPrivate) {\n    return 1;\n  } else if (!isAPrivate && isBPrivate) {\n    return -1;\n  } // Check certified?\n\n\n  if (a.isCertified && !b.isCertified) {\n    return -1;\n  } else if (!a.isCertified && b.isCertified) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Sort given addresses by putting public addresses first.\n * In case of equality, a certified address will come first.\n *\n * @param {Array<Address>} addresses\n * @returns {Array<Address>}\n */\n\n\nfunction publicAddressesFirst(addresses) {\n  return [...addresses].sort(addressesPublicFirstCompareFunction);\n}\n\nmodule.exports.publicAddressesFirst = publicAddressesFirst;","map":null,"metadata":{},"sourceType":"script"}