{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('.').Keychain} config.keychain\n */\n\n\nmodule.exports = ({\n  keychain\n}) => {\n  /**\n   * Remove a key\n   *\n   * @example\n   * ```js\n   * const key = await ipfs.key.rm('my-key')\n   *\n   * console.log(key)\n   * // { id: 'QmWETF5QvzGnP7jKq5sPDiRjSM2fzwzNsna4wSBEzRzK6W',\n   * //   name: 'my-key' }\n   * ```\n   *\n   * @param {string} name - The name of the key to remove\n   * @returns {Promise<RemovedKey>} - An object that describes the removed key\n   */\n  const rm = name => keychain.removeKey(name);\n\n  return withTimeoutOption(rm);\n};\n/**\n * @typedef {Object} RemovedKey\n * @property {string} name - The name of the key\n * @property {string} id -  The hash of the key\n */","map":null,"metadata":{},"sourceType":"script"}