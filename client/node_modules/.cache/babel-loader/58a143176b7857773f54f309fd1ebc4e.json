{"ast":null,"code":"'use strict';\n\nconst last = require('it-last');\n/**\n * @param {Object} config\n * @param {ReturnType<typeof import('./add-all')>} config.addAll\n */\n\n\nmodule.exports = ({\n  addAll\n}) =>\n/**\n * @param {CID|string} path\n * @param {AddOptions & AbortOptions} [options]\n * @returns {Promise<CID>}\n */\nasync (path, options = {}) =>\n/** @type {CID} - Need to loosen check here because it could be void */\nawait last(addAll({\n  path,\n  ...options\n}, options));\n/**\n * @typedef {Object} AddOptions\n * @property {boolean} [lock]\n * @property {boolean} [recursive] - Recursively pin all links contained by the object\n *\n * @typedef {import('../../utils').AbortOptions} AbortOptions\n * @typedef {import('..').CID} CID\n */","map":null,"metadata":{},"sourceType":"script"}