{"ast":null,"code":"'use strict';\n\nconst last = require('it-last');\n/**\n * @param {Object} config\n * @param {ReturnType<typeof import('./rm-all')>} config.rmAll\n */\n\n\nmodule.exports = ({\n  rmAll\n}) =>\n/**\n * Unpin this block from your repo\n *\n * @param {string|CID} path - CID or IPFS Path to unpin.\n * @param {RmOptions} [options]\n * @returns {Promise<CID>} - The CIDs that was unpinned\n * @example\n * ```js\n * const cid = CID.from('QmWATWQ7fVPP2EFGu71UkfnqhYXDYH566qy47CnJDgvs8u')\n * const result = await ipfs.pin.rm(cid)\n * console.log(result)\n * // prints the CID that was unpinned\n * // CID('QmWATWQ7fVPP2EFGu71UkfnqhYXDYH566qy47CnJDgvs8u')\n * ```\n */\nasync (path, options) =>\n/** @type {CID} - Need to loosen check here because it could be void */\nawait last(rmAll({\n  path,\n  ...options\n}, options));\n/**\n * @typedef {RmSettings & AbortOptions} RmOptions\n *\n * @typedef {Object} RmSettings\n * @property {boolean} [recursive=true] - Recursively unpin the object linked\n *\n * @typedef {import('..').CID} CID\n * @typedef {import('../../utils').AbortOptions} AbortOptions\n */","map":null,"metadata":{},"sourceType":"script"}