{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('.').Keychain} config.keychain\n */\n\n\nmodule.exports = ({\n  keychain\n}) => {\n  /**\n   * Remove a key\n   *\n   * @example\n   * ```js\n   * const pem = await ipfs.key.export('self', 'password')\n   *\n   * console.log(pem)\n   * // -----BEGIN ENCRYPTED PRIVATE KEY-----\n   * // MIIFDTA/BgkqhkiG9w0BBQ0wMjAaBgkqhkiG9w0BBQwwDQQIpdO40RVyBwACAWQw\n   * // ...\n   * // YA==\n   * // -----END ENCRYPTED PRIVATE KEY-----\n   * ```\n   * @param {string} name - The name of the key to export\n   * @param {string} password - Password to set on the PEM output\n   * @returns {Promise<string>} - The string representation of the key\n   */\n  const exportKey = (name, password) => keychain.exportKey(name, password);\n\n  return withTimeoutOption(exportKey);\n};","map":null,"metadata":{},"sourceType":"script"}