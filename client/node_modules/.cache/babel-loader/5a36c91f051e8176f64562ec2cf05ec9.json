{"ast":null,"code":"'use strict';\n\nconst _require = require('multibase/src/constants'),\n      names = _require.names;\n\nconst _require2 = require('web-encoding'),\n      TextDecoder = _require2.TextDecoder;\n\nconst utf8Decoder = new TextDecoder('utf8');\n/**\n * Turns a Uint8Array of bytes into a string with each\n * character being the char code of the corresponding byte\n *\n * @param {Uint8Array} array The array to turn into a string\n * @returns {String}\n */\n\nfunction uint8ArrayToAsciiString(array) {\n  let string = '';\n\n  for (let i = 0; i < array.length; i++) {\n    string += String.fromCharCode(array[i]);\n  }\n\n  return string;\n}\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array The array to turn into a string\n * @param {String} [encoding=utf8] The encoding to use\n * @returns {String}\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\n */\n\n\nfunction toString(array, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(array);\n  }\n\n  if (encoding === 'ascii') {\n    return uint8ArrayToAsciiString(array);\n  }\n\n  const codec = names[encoding];\n\n  if (!codec) {\n    throw new Error('Unknown base');\n  }\n\n  return codec.encode(array);\n}\n\nmodule.exports = toString;","map":null,"metadata":{},"sourceType":"script"}