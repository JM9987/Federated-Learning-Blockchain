{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('.').Repo} config.repo\n */\n\n\nmodule.exports = function ({\n  repo\n}) {\n  /**\n   * @param {import('.').AbortOptions} [options]\n   * @returns {AsyncIterable<{ref: string}>}\n   */\n  async function* refsLocal(options = {}) {\n    // @ts-ignore - TS is not aware of keysOnly\n    for await (const cid of repo.blocks.query({\n      keysOnly: true,\n      signal: options.signal\n    })) {\n      yield {\n        ref: cid.toString()\n      };\n    }\n  }\n\n  return withTimeoutOption(refsLocal);\n};","map":null,"metadata":{},"sourceType":"script"}