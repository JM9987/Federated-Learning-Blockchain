{"ast":null,"code":"'use strict';\n\nconst createData = require('./data');\n\nconst createGet = require('./get');\n\nconst createLinks = require('./links');\n\nconst createNew = require('./new');\n\nconst createPut = require('./put');\n\nconst createStat = require('./stat');\n\nconst ObjectPatchAPI = require('./patch');\n\nclass ObjectAPI {\n  /**\n   * @param {Object} config\n   * @param {IPLD} config.ipld\n   * @param {Preload} config.preload\n   * @param {GCLock} config.gcLock\n   * @param {Dag} config.dag\n   */\n  constructor({\n    ipld,\n    preload,\n    dag,\n    gcLock\n  }) {\n    this.data = createData({\n      ipld,\n      preload\n    });\n    this.get = createGet({\n      ipld,\n      preload\n    });\n    this.links = createLinks({\n      dag\n    });\n    this.new = createNew({\n      ipld,\n      preload\n    });\n    this.put = createPut({\n      ipld,\n      preload,\n      gcLock\n    });\n    this.stat = createStat({\n      ipld,\n      preload\n    });\n    this.patch = new ObjectPatchAPI({\n      ipld,\n      preload,\n      gcLock\n    });\n  }\n\n}\n\nmodule.exports = ObjectAPI;\n/**\n * @typedef {import('..').IPLD} IPLD\n * @typedef {import('..').Preload} Preload\n * @typedef {import('..').GCLock} GCLock\n * @typedef {import('..').Dag} Dag\n * @typedef {import('..').CID} CID\n * @typedef {import('..').AbortOptions} AbortOptions\n */","map":null,"metadata":{},"sourceType":"script"}