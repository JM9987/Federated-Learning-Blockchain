{"ast":null,"code":"'use strict';\n\nconst _require = require('native-fetch'),\n      nativeFetch = _require.default,\n      Headers = _require.Headers;\n/**\n * Build fetch resource for request.\n *\n * @param {object} properties\n * @param {string} properties.serverResolver\n * @param {string} properties.hostname\n * @param {string} properties.recordType\n * @returns {string}\n */\n\n\nfunction buildResource({\n  serverResolver,\n  hostname,\n  recordType\n}) {\n  return \"\".concat(serverResolver, \"?name=\").concat(hostname, \"&type=\").concat(recordType);\n}\n\nmodule.exports.buildResource = buildResource;\n/**\n * Use fetch to find the record.\n *\n * @param {object} resource\n * @returns {Promise}\n */\n\nfunction fetch(resource) {\n  return nativeFetch(resource, {\n    headers: new Headers({\n      accept: 'application/dns-json'\n    })\n  });\n}\n\nmodule.exports.fetch = fetch;\n/**\n * Creates cache key composed by recordType and hostname.\n *\n * @param {string} hostname\n * @param {string} recordType\n * @returns {string}\n */\n\nfunction getCacheKey(hostname, recordType) {\n  return \"\".concat(recordType, \"_\").concat(hostname);\n}\n\nmodule.exports.getCacheKey = getCacheKey;","map":null,"metadata":{},"sourceType":"script"}